// Generated by CoffeeScript 1.3.3
(function() {
  var FreeAgent, authorizeUrl, baseUri, crypto, proxyUrl, qs, request, tokenUrl, _;

  request = require('request');

  crypto = require('crypto');

  qs = require('querystring');

  _ = require('underscore');

  baseUri = 'https://api.freeagent.com/v2/';

  authorizeUrl = baseUri + 'approve_app';

  tokenUrl = baseUri + 'token_endpoint';

  proxyUrl = process.env.HTTPS_PROXY || process.env.https_proxy;

  FreeAgent = (function() {

    function FreeAgent(access_token) {
      this.access_token = access_token;
    }

    FreeAgent.prototype._prepareHeaders = function(access_token, options) {
      if (!options) {
        options = {};
      }
      return _.extend(options, {
        proxy: proxyUrl,
        headers: {
          'Accept': 'application/json',
          'User-Agent': 'node-freeagent2',
          'Authorization': "Bearer " + access_token
        }
      });
    };

    FreeAgent.prototype.getCompany = function(callback) {
      return this._getRequest('company', null, callback);
    };

    FreeAgent.prototype.getProjects = function(callback) {
      return this._getRequest('projects', null, callback);
    };

    FreeAgent.prototype._getRequest = function(url, options, callback) {
      var requestUri;
      requestUri = baseUri + url;
      if (options) {
        requestUri += '?' + qs.stringify(options);
      }
      return request.get(this._prepareHeaders(this.access_token, {
        uri: requestUri,
        json: true
      }), function(error, response, body) {
        if (!error) {
          if (response.statusCode === 200) {
            return callback(null, body);
          } else {
            return callback(new Error("" + response.statusCode + " : {response.body}"));
          }
        } else {
          return callback(error);
        }
      });
    };

    return FreeAgent;

  })();

  module.exports = FreeAgent;

}).call(this);
